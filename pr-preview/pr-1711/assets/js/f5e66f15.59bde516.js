"use strict";(self.webpackChunktextlint_website=self.webpackChunktextlint_website||[]).push([[4799],{4894:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"integrations","title":"Integrating with Editors, CI, Tools, etc..","description":"Editors","source":"@site/../docs/integrations.md","sourceDirName":".","slug":"/integrations","permalink":"/textlint/pr-preview/pr-1711/docs/integrations","draft":false,"unlisted":false,"editUrl":"https://github.com/textlint/textlint/edit/master/docs/../docs/integrations.md","tags":[],"version":"current","lastUpdatedBy":"azu","lastUpdatedAt":1756517049000,"frontMatter":{"id":"integrations","title":"Integrating with Editors, CI, Tools, etc.."},"sidebar":"docs","previous":{"title":"Ignoring Text","permalink":"/textlint/pr-preview/pr-1711/docs/ignore"},"next":{"title":"textlint MCP Server Setup","permalink":"/textlint/pr-preview/pr-1711/docs/mcp"}}');var s=n(1273),l=n(6719);const r={id:"integrations",title:"Integrating with Editors, CI, Tools, etc.."},c=void 0,o={},h=[{value:"Editors",id:"editors",level:2},{value:"AI Assistants (MCP)",id:"ai-assistants-mcp",level:2},{value:"CI/CD",id:"cicd",level:2},{value:"GitHub Actions",id:"github-actions",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Basic Setup",id:"basic-setup",level:4},{value:"Pull Request Check",id:"pull-request-check",level:4},{value:"Third-party Actions",id:"third-party-actions",level:4},{value:"Browser",id:"browser",level:2},{value:"Program languages",id:"program-languages",level:2},{value:"Other",id:"other",level:2}];function a(t){const e={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"editors",children:"Editors"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Atom Editor\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/1000ch/linter-textlint",title:"1000ch/linter-textlint",children:"1000ch/linter-textlint"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["SublimeText\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/joeybaker/sublimelinter-textlint",children:"joeybaker/sublimelinter-textlint"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Vim\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/dense-analysis/ale",children:"ale"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/heavenshell/vim-textlint",title:"vim-textlint",children:"vim-textlint"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/vim-syntastic/syntastic",title:"scrooloose/syntastic",children:"scrooloose/syntastic"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["See ",(0,s.jsx)(e.a,{href:"https://github.com/vim-syntastic/syntastic/wiki/Markdown",title:"Markdown",children:"Markdown"}),", ",(0,s.jsx)(e.a,{href:"https://github.com/vim-syntastic/syntastic/wiki/Text",title:"Text",children:"Text"})," and ",(0,s.jsx)(e.a,{href:"https://github.com/vim-syntastic/syntastic/wiki/HTML",title:"HTML",children:"HTML"})," of ",(0,s.jsx)(e.a,{href:"https://github.com/vim-syntastic/syntastic/wiki/Syntax-Checkers",title:"Syntax Checkers \xb7 scrooloose/syntastic Wiki",children:"scrooloose/syntastic Wiki"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Visual Studio Code\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/textlint/vscode-textlint",children:"textlint/vscode-textlint"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/zyedidia/micro",title:"micro",children:"micro"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/hidaruma/micro-textlint-plugin",title:"hidaruma/micro-textlint-plugin: textlint plugin for micro-editor",children:"hidaruma/micro-textlint-plugin"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["NetBeans\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/junichi11/netbeans-textlint-plugin",title:"netbeans-textlint-plugin",children:"netbeans-textlint-plugin"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Emacs\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.flycheck.org/en/latest/languages.html#syntax-checker-textlint",title:"emacs-flycheck-package",children:"flycheck/flycheck"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"ai-assistants-mcp",children:"AI Assistants (MCP)"}),"\n",(0,s.jsxs)(e.p,{children:["textlint can be used as a ",(0,s.jsx)(e.a,{href:"https://modelcontextprotocol.io/",children:"Model Context Protocol (MCP)"})," server, enabling AI assistants to interact with textlint directly:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npx textlint --mcp\n"})}),"\n",(0,s.jsx)(e.p,{children:"The MCP server provides tools for linting and fixing text content, allowing AI assistants to automatically check and improve text quality using your textlint configuration."}),"\n",(0,s.jsxs)(e.p,{children:["For detailed setup instructions, see ",(0,s.jsx)(e.a,{href:"/textlint/pr-preview/pr-1711/docs/mcp",children:"MCP Setup Guide"}),"."]}),"\n",(0,s.jsx)(e.h2,{id:"cicd",children:"CI/CD"}),"\n",(0,s.jsx)(e.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,s.jsx)(e.p,{children:"You can integrate textlint into your GitHub Actions workflow to automatically check text content in pull requests and commits."}),"\n",(0,s.jsx)(e.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(e.p,{children:"Before setting up GitHub Actions, ensure your project has:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["A textlint configuration file (",(0,s.jsx)(e.code,{children:".textlintrc.json"}),", ",(0,s.jsx)(e.code,{children:".textlintrc.js"}),", etc.)"]}),"\n",(0,s.jsxs)(e.li,{children:["Required textlint rules and plugins installed as dependencies in ",(0,s.jsx)(e.code,{children:"package.json"})]}),"\n",(0,s.jsxs)(e.li,{children:["A npm script for running textlint (e.g., ",(0,s.jsx)(e.code,{children:'"textlint": "textlint docs/**"'})," in ",(0,s.jsx)(e.code,{children:"package.json"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["textlint has no default rules, so proper configuration is essential. See ",(0,s.jsx)(e.a,{href:"/textlint/pr-preview/pr-1711/docs/configuring",children:"Configuring textlint"})," for setup instructions."]}),"\n",(0,s.jsx)(e.h4,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsxs)(e.p,{children:["Create ",(0,s.jsx)(e.code,{children:".github/workflows/textlint.yml"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: textlint\non:\n  push:\n  pull_request:\n\njobs:\n  textlint:\n    name: textlint\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 'lts/*'\n      - run: npm ci\n      - run: npm run textlint\n"})}),"\n",(0,s.jsx)(e.h4,{id:"pull-request-check",children:"Pull Request Check"}),"\n",(0,s.jsx)(e.p,{children:"For checking only changed files in pull requests:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"name: textlint\non:\n  pull_request:\n\njobs:\n  textlint:\n    name: textlint\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 'lts/*'\n      - run: npm ci\n      - name: Get changed files\n        id: changed-files\n        uses: tj-actions/changed-files@v45\n        with:\n          files: '**/*.{md,txt}'\n      - name: Run textlint on changed files\n        if: steps.changed-files.outputs.any_changed == 'true'\n        run: npx textlint ${{ steps.changed-files.outputs.all_changed_files }}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"third-party-actions",children:"Third-party Actions"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/reviewdog/reviewdog",children:"reviewdog"}),": Automated code review tool that supports textlint"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/tsuyoshicho/action-textlint",children:"action-textlint"}),": Dedicated GitHub Action for running textlint with reviewdog integration"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"browser",children:"Browser"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/textlint/editor",children:"@textlint/editor"}),": Privacy-first browser extension for offline text linting"]}),"\n",(0,s.jsxs)(e.li,{children:["Chrome Extension\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://chrome.google.com/webstore/detail/textlint-proofreader/hdongmdneapmhfblomidbafplpanpdmm",children:"Chrome: textlint-proofreader"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/io-monad/textlint-chrome-extension",title:"io-monad/textlint-chrome-extension: textlint Chrome Extension",children:"io-monad/textlint-chrome-extension: textlint Chrome Extension"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"program-languages",children:"Program languages"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/uribo/textlintr",children:"textlintr"}),": R language package"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"other",children:"Other"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/prontolabs/pronto",title:"Pronto",children:"Pronto"}),": ",(0,s.jsx)(e.a,{href:"https://github.com/seikichi/pronto-textlint",title:"pronto-textlint",children:"pronto-textlint"})]}),"\n"]})]})}function d(t={}){const{wrapper:e}={...(0,l.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(a,{...t})}):a(t)}},6719:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>c});var i=n(3917);const s={},l=i.createContext(s);function r(t){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),i.createElement(l.Provider,{value:e},t.children)}}}]);