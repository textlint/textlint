"use strict";(self.webpackChunktextlint_website=self.webpackChunktextlint_website||[]).push([[1377],{4318:(e,n,l)=>{l.d(n,{R:()=>s,x:()=>c});var i=l(4700);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},6486:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"configuring","title":"Configuring textlint","description":"Configuration Files","source":"@site/../docs/configuring.md","sourceDirName":".","slug":"/configuring","permalink":"/textlint/pr-preview/pr-1612/docs/configuring","draft":false,"unlisted":false,"editUrl":"https://github.com/textlint/textlint/edit/master/docs/../docs/configuring.md","tags":[],"version":"current","lastUpdatedBy":"azu","lastUpdatedAt":1751210406000,"frontMatter":{"id":"configuring","title":"Configuring textlint"},"sidebar":"docs","previous":{"title":"Command Line Interface","permalink":"/textlint/pr-preview/pr-1612/docs/cli"},"next":{"title":"Ignoring Text","permalink":"/textlint/pr-preview/pr-1612/docs/ignore"}}');var t=l(7968),r=l(4318);const s={id:"configuring",title:"Configuring textlint"},c=void 0,o={},d=[{value:"Configuration Files",id:"configuration-files",level:2},{value:"Rule",id:"rule",level:2},{value:"Usage of rule",id:"usage-of-rule",level:3},{value:"Enable/Disable rule",id:"enabledisable-rule",level:3},{value:"Rule&#39;s options",id:"rules-options",level:3},{value:"Rule name",id:"rule-name",level:3},{value:"Severity config of rules",id:"severity-config-of-rules",level:3},{value:"Rule-preset",id:"rule-preset",level:2},{value:"Filter rule",id:"filter-rule",level:2},{value:"Plugin",id:"plugin",level:2},{value:"Plugin option",id:"plugin-option",level:3},{value:"Sharable Configuration",id:"sharable-configuration",level:2},{value:"Overview",id:"overview",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,t.jsx)(n.p,{children:"You can use following file as configuration file:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".textlintrc"})," \u2013 try parse it as JSON, YAML or JS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".textlintrc.js"})," \u2013 parse it as JavaScript"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".textlintrc.json"})," \u2013 parse it as JSON"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".textlintrc.yml"})," \u2013 parse it as YAML"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".textlintrc.yaml"})," \u2013 parse it as YAML"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:".textlintrc"})," is a config file which is loaded as JSON, YAML or JS via ",(0,t.jsx)(n.a,{href:"https://github.com/azu/rc-config-loader",children:"azu/rc-config-loader"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can put the config of rules into ",(0,t.jsx)(n.code,{children:".textlintrc"})]}),"\n",(0,t.jsxs)(n.p,{children:["Or a ",(0,t.jsx)(n.code,{children:"textlint"})," field in the ",(0,t.jsx)(n.code,{children:"package.json"})," can be used."]}),"\n",(0,t.jsx)(n.h2,{id:"rule",children:"Rule"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"rule"})," provide linting/fixing function."]}),"\n",(0,t.jsx)(n.h3,{id:"usage-of-rule",children:"Usage of rule"}),"\n",(0,t.jsxs)(n.p,{children:["Add rule name to ",(0,t.jsx)(n.code,{children:"rules"})," field."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "no-todo": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"enabledisable-rule",children:"Enable/Disable rule"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "no-todo": true,\n    "very-nice-rule": false\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"true"})," means that enable ",(0,t.jsx)(n.code,{children:'"no-todo"'})," rule"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"false"})," means that disable ",(0,t.jsx)(n.code,{children:'"very-nice-rule"'})," rule"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rules-options",children:"Rule's options"}),"\n",(0,t.jsxs)(n.p,{children:["Each rule's options can accept a ",(0,t.jsx)(n.code,{children:"object"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "no-todo": true,\n    "very-nice-rule": {\n        "key": "value"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"It means that"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["enable ",(0,t.jsx)(n.code,{children:'"no-todo"'})," rule"]}),"\n",(0,t.jsxs)(n.li,{children:["enable ",(0,t.jsx)(n.code,{children:'"very-nice-rule"'})," rule and pass ",(0,t.jsx)(n.code,{children:'{ "key" : "value" }'})," to the rule"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For rules creator:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'// "very-nice-rule"\nexport default function rule(content, config){\n    console.log(config);\n    /* { "key" : "value" } */\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"rule-name",children:"Rule name"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "<name>": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The rule ",(0,t.jsx)(n.code,{children:"<name>"})," can be accept following patterns:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"textlint-rule-<name>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"<name>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@scope/textlint-rule-<name>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"@scope/<name>"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For example, following configs express the same thing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "cool": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"is equal to"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "textlint-rule-cool": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"severity-config-of-rules",children:"Severity config of rules"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"severity"})," : ",(0,t.jsx)(n.code,{children:'"<warning|error>"'}),' - Default: "error"']}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "no-todo": {\n        "severity" : "warning"\n     }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"It means that"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'enable "no-todo" rule'}),"\n",(0,t.jsxs)(n.li,{children:["found thing match the rule and show warning message(exit status is ",(0,t.jsx)(n.code,{children:"0"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Summary"})}),"\n",(0,t.jsx)(n.p,{children:"Can use the following format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  "rules": {\n    "<rule-name>": true || false || object\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u2139\ufe0f Examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/tree/master/examples/config-file",children:"examples/config-file"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/tree/master/examples/config-in-package-json",children:"examples/config-in-package-json"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rule-preset",children:"Rule-preset"}),"\n",(0,t.jsx)(n.p,{children:"Rule-preset is a collection of rules."}),"\n",(0,t.jsx)(n.p,{children:"The way of configuration is same with textlint-rule."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "preset-example": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Put the config of ",(0,t.jsx)(n.code,{children:"foo"})," rule in ",(0,t.jsx)(n.code,{children:"text-rule-preset-example"})," rule-preset."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json5",children:'{\n  "rules": {\n    "preset-example": {\n        "foo": true // configuration for "textlint-rule-foo" in "textlint-rule-preset-bar"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"filter-rule",children:"Filter rule"}),"\n",(0,t.jsx)(n.p,{children:"Filter rule provide filtering error by linting rule."}),"\n",(0,t.jsxs)(n.p,{children:["For example, ",(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint-filter-rule-comments",children:"textlint-filter-rule-comments"})," provide filtering function by using comments."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\x3c!-- textlint-disable --\x3e\n\nDisables all rules between comments\n\n\x3c!-- textlint-enable --\x3e`\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Allow to short ",(0,t.jsx)(n.code,{children:"textlint-filter-rule-comments"})," to ",(0,t.jsx)(n.code,{children:"comments"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Add filter rule name to ",(0,t.jsx)(n.code,{children:"filters"})," field."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "filters": {\n    "comments": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["One more example, ",(0,t.jsx)(n.code,{children:"very-nice-rule"})," is useful, but you want to ignore some reported error in your text.\n",(0,t.jsx)(n.code,{children:"very-nice-rule"})," also check the ",(0,t.jsx)(n.code,{children:"BlockQuote"})," text, but you want to ignore the ",(0,t.jsx)(n.code,{children:"BlockQuote"})," text.\n",(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint-filter-rule-node-types",children:"textlint-filter-rule-node-types"})," rule resolve the issue."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "filters": {\n    "node-types": {\n      "nodeTypes": ["BlockQuote"]\n    }\n  },\n  "rules": {\n    "very-nice-rule": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u2139\ufe0f See ",(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/tree/master/examples/filter",children:"examples/filter"})]}),"\n",(0,t.jsx)(n.h2,{id:"plugin",children:"Plugin"}),"\n",(0,t.jsx)(n.p,{children:"textlint can treat markdown and text file by default."}),"\n",(0,t.jsx)(n.p,{children:"textlint support other file format by plugin."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Other plugin\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["see ",(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/wiki/Collection-of-textlint-rule#processor-plugin-list",children:"Processor Plugin list"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["How to create a plugin:\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["see ",(0,t.jsx)(n.a,{href:"/textlint/pr-preview/pr-1612/docs/plugin",children:"Plugin document"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"plugin-option",children:"Plugin option"}),"\n",(0,t.jsx)(n.p,{children:"textlint's built-in plugins are text and markdown."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/tree/master/packages/@textlint/textlint-plugin-text",children:(0,t.jsx)(n.code,{children:"@textlint/textlint-plugin-text"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/tree/master/packages/@textlint/textlint-plugin-markdown",children:(0,t.jsx)(n.code,{children:"@textlint/textlint-plugin-markdown"})})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'These plugin support custom "extensions" options.'}),"\n",(0,t.jsxs)(n.p,{children:["For example, if you want to treat ",(0,t.jsx)(n.code,{children:".hown"})," as markdown, put following config to ",(0,t.jsx)(n.code,{children:".textlintrc.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json5",children:'{\n    "plugins": {\n        "@textlint/markdown": {\n            "extensions": [".hown"]\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"sharable-configuration",children:"Sharable Configuration"}),"\n",(0,t.jsx)(n.p,{children:"textlint support module of configuration."}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Not support ",(0,t.jsx)(n.code,{children:"config"})," in ",(0,t.jsx)(n.code,{children:".textlintrc.json"})," yet. See ",(0,t.jsx)(n.a,{href:"https://github.com/textlint/textlint/issues/210",children:"https://github.com/textlint/textlint/issues/210"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Specify config module via ",(0,t.jsx)(n.code,{children:"--config"})," command line option."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"textlint --config <config-module-name>\ntextlint --config textlint-config-<name>\ntextlint --config @<scope>/<config-module-name>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"rule-preset-plugin",src:l(9545).A+"",width:"600",height:"478"})})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},9545:(e,n,l)=>{l.d(n,{A:()=>i});const i=l.p+"assets/images/rule-preset-plugin-41aeba6f2aaac2a11345b6141f4a06e1.png"}}]);