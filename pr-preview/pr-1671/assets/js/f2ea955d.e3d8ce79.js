"use strict";(self.webpackChunktextlint_website=self.webpackChunktextlint_website||[]).push([[4812],{588:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ignore","title":"Ignoring Text","description":"Use .textlintignore to ignore certain files and folders completely.","source":"@site/../docs/ignore.md","sourceDirName":".","slug":"/ignore","permalink":"/textlint/pr-preview/pr-1671/docs/ignore","draft":false,"unlisted":false,"editUrl":"https://github.com/textlint/textlint/edit/master/docs/../docs/ignore.md","tags":[],"version":"current","lastUpdatedBy":"azu","lastUpdatedAt":1753585297000,"frontMatter":{"id":"ignore","title":"Ignoring Text"},"sidebar":"docs","previous":{"title":"Configuring textlint","permalink":"/textlint/pr-preview/pr-1671/docs/configuring"},"next":{"title":"Integrating with Editors, CI, Tools, etc..","permalink":"/textlint/pr-preview/pr-1671/docs/integrations"}}');var r=n(7968),o=n(4318);const s={id:"ignore",title:"Ignoring Text"},l=void 0,c={},d=[{value:"Ignoring Files: .textlintignore",id:"ignoring-files-textlintignore",level:3},{value:"Ignoring parts of files",id:"ignoring-parts-of-files",level:3}];function a(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.code,{children:".textlintignore"})," to ignore certain files and folders completely."]}),"\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.a,{href:"https://github.com/textlint/textlint-filter-rule-comments",children:"textlint-filter-rule-comments"})," to ignore parts of files."]}),"\n",(0,r.jsx)(t.h3,{id:"ignoring-files-textlintignore",children:"Ignoring Files: .textlintignore"}),"\n",(0,r.jsxs)(t.p,{children:["To exclude files from linting, create a ",(0,r.jsx)(t.code,{children:".textlintignore"})," file in the root of your project."]}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"# Ignore file:\nignored.md\n\n# Ignore by glob pattern:\nvendor/**\n"})}),"\n",(0,r.jsxs)(t.p,{children:["\ud83d\udcdd textlint supports ",(0,r.jsx)(t.a,{href:"https://github.com/isaacs/node-glob#glob-primer",children:"glob pattern of node-glob"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["You can also specify path to a file containing patterns that describes files to ignore by ",(0,r.jsx)(t.code,{children:"--ignore-path"})," flag."]}),"\n",(0,r.jsx)(t.h3,{id:"ignoring-parts-of-files",children:"Ignoring parts of files"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://github.com/textlint/textlint-filter-rule-comments",children:"textlint-filter-rule-comments"})," provide filtering function by using comments."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\x3c!-- textlint-disable --\x3e\n\nDisables all rules between comments\n\n\x3c!-- textlint-enable --\x3e\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Allow to short ",(0,r.jsx)(t.code,{children:"textlint-filter-rule-comments"})," to ",(0,r.jsx)(t.code,{children:"comments"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Add filter rule name to ",(0,r.jsx)(t.code,{children:"filters"})," field."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "filters": {\n    "comments": true\n  }\n}\n'})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},4318:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var i=n(4700);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);